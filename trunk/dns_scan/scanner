#!/bin/bash

if [ "$3" == "" ];then
    echo "Usage: $0 <ip from> <ip to> <device>"
    exit 1
fi

if [ `id -u` != 0 ];then
    echo "Root privileges required"
    exit 2
fi

#DEV=`tty`
DEV=/dev/null

DELAY=5
OUTFILE=results/results_$1_$2.txt
NETDEV=$3

ifconfig $NETDEV >& $DEV
if [ $? != 0 ];then
    echo "Interface $NETDEV is not present"
    exit 3
fi

if [ -f $OUTFILE ];then
    echo "Output file $OUTFILE exists. Exiting."
    exit 4
fi

which tshark &> $DEV
if [ $? != 0 ];then
    echo "tshark required"
    exit 5
fi

if [ ! -f core_scanner ];then
    echo "Compiling core scanner"
    which gcc >& $DEV
    if [ $? != 0 ];then
    	echo "gcc required."
    	exit 5
    fi
    gcc -Wall -funroll-loops -O3 core_scanner.c -o core_scanner
fi

slower() {
    for (( i = 0 ; i < $1; i++ )) do
        sleep 1
        echo -n "."
    done
    echo " "
}

mkdir -p radar
mkdir -p results

echo -n "Starting radar on $NETDEV"
tcpdump -l -nn -i $NETDEV -w radar/radar_$1_$2.pcap udp src port 53 >& $DEV &
RADAR_PID=$!
slower 5
echo "Radar started with pid $RADAR_PID"

echo "Starting scanner"
./scan_dns $1 $2
echo "Scanner finished"

echo -n "Waiting slow scan packets"
slower 10
echo -n "Stopping radar"
kill -15 $RADAR_PID
slower 5

echo "Parsing results"
tshark -r radar/radar_$1_$2.pcap -l -nn 2> $DEV | awk ' { print $3 } ' | sort -u > $OUTFILE
rm -rf radar.pcap

echo "Output is in file $OUTFILE"
